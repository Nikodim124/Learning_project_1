<!doctype html>
<html>
  <head>
      <meta http-equiv="Content-type" content="text/html; charset=utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=Edge">
      <title>ПРОЕКТ ПО УЧЕБНОЙ ПРАКТИКЕ</title>
      <link rel="stylesheet" href="css/styles.css" type="text/css">
      <link rel="preconnect" href="https://fonts.gstatic.com">
      <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,700;1,300&display=swap" rel="stylesheet">
  </head>
    <body>
    <div class="sidebar">
        <header><a href="https://pspu.ru"><img src="images/Group.png" alt="ПГГПУ" height="150px"></a></header>
        <ul>
          <li><a href="index.htm">Главная</a></li>
          <li><a class="current" href="teor.htm">Теория</a></li>
          <ul>
            <li><a class="sub" href="teor1.htm">Теоретическая часть 1</a></li>
            <li><a class="current sub" href="teor2.htm">Теоретическая часть 2</a></li>
            <li><a class="sub" href="teor3.htm">Теоретическая часть 3</a></li>
          </ul>
          <li><a href="prac.htm">Практика</a></li>
          <li><a href="avt.htm">Авторы</a></li>
        </ul>
      </div>
      <div class="content">
        <div class="head">ПРОЕКТ ПО УЧЕБНОЙ ПРАКТИКЕ</div>
        <div class="text">
          <p>Так как в первой части было решено использовать математические данные о суммах транзакций, следующим шагом необходимо было узнать о закономерностях во временных промежутках.</p>
          <div class="teor_title">РАЗБИЕНИЕ ДАННЫХ</div>
          <p>Функция <b>qcut()</b> описывается как "функция дискретизации на основе квантилей". По сути, это означает, что <b>qcut</b> пытается разделить базовые данные на интервалы равного размера. Функция определяет интервалы с использованием процентилей на основе распределения данных, а не фактических числовых границ интервалов.</p>
          <p>Здесь мы делим траты клиентов на 5 частей (квинтили), разбив все траты на категории <b>"Very High"</b>, <b>"High"</b>, <b>"Middle"</b>, <b>"Low"</b>, <b>"Very Low"</b>. По этой причине интервалы соответствуют процентилям <b>20% - 40% - 60% - 80% - 100%</b> Pandas в фоновом режиме производит вычисления, чтобы самостоятельно определить ширину интервалов.</p>
          <p>Оставшиеся неотрицательные траты, то есть приход на карту, мы поместили отдельно в категорию <b>"Income"</b>.</p>
          <p>Затем из строки <b>tr_datetime</b> (в формате "10 07:16:42") необходимо выделить час, в который совершалась транзакиция ("07" в данном примере). После этого можно приступать к построению сводной таблицы.</p>
          <div class="teor_title">СВОДНЫЕ ТАБЛИЦЫ</div>
          <p><b>Сводные таблицы (pivot table)</b> – невероятно удобный инструмент для анализа табличных данных. Сводная таблица принимает на входе данные из отдельных столбцов и группирует их, формируя двумерную таблицу, реализующую многомерное обобщение данных. То есть данные разделяются, преобразуются и объединяются, но при этом разделение и объединение осуществляются не по одномерному индексу, а по двумерной сетке. В нашем случае значениями является пол, индексы - час, столбцы - категория трат. Теперь нашу таблицу можно визуализировать и анализировать.</p>
          <div class="teor_title">ВИЗУАЛИЗАЦИЯ</div>
          <p>Лучше всего для нашего случая подойдёт график heat map. <b>Heat map</b> - это графическое представление данных, при котором значения внутри матрицы представлены цветами. Это эффективный инструмент, который позволяет визуализировать значения, получаемые на пересечении двух переменных.</p>
          <p>Для этого нам понадобится библиотеки <b>Matplotlib</b> и <b>Seaborn</b>. 
          <p>Библиотека matplotlib - это библиотека двумерной графики для языка программирования python с помощью которой можно создавать высококачественные рисунки различных форматов. Matplotlib представляет собой модуль-пакет для python.</p> 
          <p>Seaborn — это более высокоуровневое API на базе библиотеки matplotlib. Seaborn содержит улучшенные настройки оформления графиков. Также в библиотеке есть достаточно сложные типы визуализации, которые в matplotlib потребовали бы большого количество кода.</p>
          <p>В итоге мы получим следующую картину:</p>
          <div class="graph"><img src="images/buckets.png"></div>
          <p>Полученные данные были выбраны в качестве второго параметра для обучения модели. Сразу можно отметить несколько характерных черт:</p>
          <ul class="circ">
            <li>• Ночные поступления денег (01-05 часов) в более чем 85% случаев являются мужскими.</li>
            <li>• Самые низкие траты в 3 часа ночи осуществляются в более 70% случаев женщинами.</li>
            <li>• Посмотрев на долю мужчин в максимальных тратах средств (Very High), можно сделать вывод, что количество высоких трат в каждый возможный час мужчин больше, чем у женщин.</li>
            <li>• Посмотрев на долю мужчин в поступлениях средств (Income), можно сделать вывод, что количество поступлений средств мужчинам в целом больше, чем женщинам.</li>
          </ul>
        </div>
        <form action="teor3.htm" class="last">
          <button class="next">Далее</button>
        </form>
      </div>
  </body>
</html>